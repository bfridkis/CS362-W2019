++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++                                                                  ++
++                           UNIT TEST 1                            ++
++                                                                  ++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Result for running unittest1 (buyCard function test):
unittest1.c:
Starting unittest1 - Testing 'buyCard' function


Testing buyCard with sufficient buys and coins for 10 kingdom cards
**All tests for sufficient coins and sufficient buys passed!**


TOTAL FAILED TESTS AFTER T1: 0


Testing buyCard with insufficient coins and sufficient buys for 10 kingdom cards
**All tests for insufficient coins and sufficient buys passed!**


TOTAL FAILED TESTS AFTER T2: 0


Testing buyCard with sufficient coins and insufficient buys for 10 kingdom cards
**All tests for sufficient coins and insufficient buys passed!**


TOTAL FAILED TESTS AFTER T3: 0


*****************************
******ALL TESTS PASSED!******
*****************************

Function 'buyCard'
Lines executed:92.31% of 13



++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++                                                                  ++
++                           UNIT TEST 2                            ++
++                                                                  ++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Result for running unittest2 (gainCard function test):
unittest2.c:
Starting unittest2 - Testing 'buyCard' function


Gaining each supply card to each pile for player 0...

*Running Fail Count: 0...


Attempting to gain each supply card not in play (player 0)...

*Running Fail Count: 0...


Setting each supply card pile count to 0 and
  attempting to gain each supply pile card (player 0)...

*Running Fail Count: 0...


Checking player 1's game state (should be unchanged)...

*Running Fail Count: 0...


*****************************
******ALL TESTS PASSED!******
*****************************

Function 'gainCard'
Lines executed:100.00% of 13



++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++                                                                  ++
++                           UNIT TEST 3                            ++
++                                                                  ++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Result for running unittest3 (shuffle function test):
unittest3.c:
Starting unittest3 - Testing 'shuffle' function

Executing 250 shuffles using random deck sizes in range 2 - 499 (MAX_DECK - 1),
	each with a random set of kingdom cards...

Attempting empty deck shuffle...

Attempting max deck size shuffle...


*****************************
******ALL TESTS PASSED!******
*****************************


  ***************************************************************************
  ** % Variations (Relative to Deck Size) After Shuffles with no Failures **
  ***************************************************************************

					     0       : 0
					> 0  - <11%  : 0
					 11% - <21%  : 0
					 21% - <31%  : 0
					 31% - <41%  : 0
					 41% - <51%  : 0
					   >51%      : 251

	The above values represent the number of tests for which the MINIMUM
	number of observed changes divided by the deck size used produced the
	given percentage. For example, if a deck size of 20 was compared before
	and after shuffle, and 10 deck indexes contained the same card type both
	before and after shuffle, while the other 10 deck indexes contained different
	card types (when comparing the before and after decks), the test generated a
	variance value of 50%. The above values are the incidence of tests in each
	percentage range.

	Note that a few tests in the lower ranges may not indicate a faulty shuffle
	function, as these may be the result of very small deck sizes. However,
	a large incidence in the lower ranges may indicate that shuffle is not
	adequately redistributing the cards within the deck, while a large incidence
	at the '0' range specifically may indicate that shuffle is not redistributing
	the cards at all.

	Finally, it is important to note that this variance test DOES NOT ACCOUNT FOR
	CARD EXCHANGES OF THE SAME CARD TYPE. In other words, more shuffling may be
	(and likely is) occurring than is accounted for by these numbers (and hence
	the emphasis on 'minimum' above). This is an important consideration to take
	into account when evaluating these statistics, especially when the low variance
	ranges have low incidence. (In other words, a relatively low incidence for the
	low variance ranges may not necessarily indicate an issue with shuffle.)

	(Max number of tests in this breakdown is NUM_SHUFFLES + 1, as the MAX_DECK
	 deck size shuffle test is included but the empty deck shuffle test is not.)

Function 'shuffle'
Lines executed:100.00% of 16
