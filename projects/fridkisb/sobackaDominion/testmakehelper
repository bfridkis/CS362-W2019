#!/bin/bash

coverage() {

	echo -e "\t\t++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" >> testresults.out
	echo -e "\t\t++                                                                  ++" >> testresults.out
	echo -e "\t\t++          \t\t\t      ${testTypeCaps} ${testNum}\t\t\t\t\t        ++" >> testresults.out
	echo -e "\t\t++                                                                  ++" >> testresults.out
	echo -e "\t\t++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" >> testresults.out

	if [[ "${test}" = "smithy card test" ]] ; then
	echo -e "\t\t\t\tResult for running ${programName} (${test}):" >> testresults.out
	echo -e "\t\t\t\t\t\t\t\t\t${programName}.c:" >> testresults.out 
	else 
	echo -e "\t\t  Result for running ${programName} (${test}):" >> testresults.out
	echo -e "\t\t\t\t\t\t\t\t${programName}.c:" >> testresults.out 
	fi
	
	./"${programName}" >> testresults.out

	echo -e "\t  Coverage Report:\n" >> testresults.out
	printf "\t" >> testresults.out
	line=$(gcov ${gcovProg} --function-summaries -b | grep -n ${funcName} | cut -f1 -d:)
	((line+=3))
	gcov ${gcovProg} --function-summaries -b | head -n${line} | tail -n4 >> testresults.out
		
	for i in "${!ancillary_functs[@]}" ; do
		echo >> testresults.out
		if [[ ${i} = 0 ]] ; then
			echo -e "The following functions are called by ${funcName}...\n" >> testresults.out
		fi
		printf "\t" >> testresults.out
		line=$(gcov dominion.c --function-summaries -b | grep -n ${ancillary_functs[$i]} | cut -f1 -d:)
		((line+=3))
		gcov dominion.c --function-summaries -b | head -n${line} | tail -n4 >> testresults.out
	done
	
	echo -e "\n\n --------------------------------- END ${testTypeCaps} ${testNum} -------------------------------\n\n" >> testresults.out
	
	((testNum++))
}

echo -e "\n\t\t\t\t\tTEST SUITE RESULTS - CS362-400 - ASSIGNMENT 5\n\n" \
		"\t\t\t\t\t\t\t\t  Benjamin Fridkis\n\n" > testresults.out

testNum=1

## CARD TESTS ##

testTypeCaps="CARD TEST"
gcovProg="dominion.c"

# Card Test 1
test="smithy card test"
programName="cardtest_smithy"
funcName="playSmithy"
ancillary_functs[0]="drawCard"
ancillary_functs[1]="discardCard"

coverage

# Card Test 2
test="adventurer card test"
programName="cardtest_adventurer"
funcName="playAdventurer"
ancillary_functs[0]="drawCard"		#Just to be explicit...
unset ancillary_functs[1]			#clear ancillary_funct[1]

coverage

# Card Test 3
test="council_room card test"
programName="cardtest_councilroom"
funcName="playCouncilRoom"
ancillary_functs[0]="drawCard"
ancillary_functs[1]="discardCard"

coverage


## REFERENCES
# https://stackoverflow.com/questions/6723426/looping-over-arrays-printing-both-index-and-value
# Shotts, William E., The Linux Command Line. http://linuxcommand.org/tlcl.php



